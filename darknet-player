#!/usr/bin/env bash

# ==================== Darknet Player =====================
# Bash script to download and play Darknet Diaries episodes
# 
# Darknet Diaries created by Jack Rhysider 
# Website: https://darknetdiaries.com/
#
# Script author: Costinteo
# Github: https://github.com/Costinteo
# License: GNU GPL v3. 
# Link: https://www.gnu.org/licenses/gpl-3.0.en.html
# =========================================================

# === CLI Arguments ===
KEEP=0
USAGE=0
LICENSE=0
COLOR=1
VERBOSE=0
EPISODE=0

# === Global vars ===
LAST_FILENAME_DOWNLOADED=""

# === Constants ===
# = Links =
DARKNET_DIARIES_HOST="https://darknetdiaries.com/"
EPISODE_NUMBER_PATTERN="EPISODE_NUMBER"
EPISODE_API="episode/$EPISODE_NUMBER_PATTERN/"
EPISODE_TITLE="darknet-diaries-$EPISODE_NUMBER_PATTERN.mp3"

# = Colors =
GREEN='\033[32;01m'
YELLOW='\033[33;01m'
RED='\033[1;31m'
BLUE='\033[34;01m'
PURPLE='\033[35m'
TEXT='\033[0m'


# =========================================================


usage() {
	cat <<- _end_of_usage
	Usage: darknet-player [OPTIONS]...
	Download and play Darknet Diaries episodes in the terminal.

	Options:
	    -h, --help               print this text and exit
	        --license            print license and exit
	        --no-color           suppress colored output
	    -p, --play <EP>          download & play episode <EP>
	    -k, --keep               don't remove episode after playing

	Darknet Diaries is made by Jack Rhysider. <https://darknetdiaries.com/>
	The script is written by Costinteo. <https://github.com/Costinteo>
	Licensed under GNU GPL v3. <https://www.gnu.org/licenses/gpl-3.0.en.html>
	_end_of_usage

	cleanup
	exit 0
}

license() {
	cat LICENSE
	cleanup
	exit 0
}

getArgs() {
	
	[ $# == 0 ] && usage

	while [ $# != 0 ]
	do
		case "$1" in
		"-h"|"--help")
			USAGE=1
			;;

		"--license")
			LICENSE=1
			;;

		"--no-color")
			COLOR=0
			;;
		"-p"|"--play")
			local numeric='^[0-9]+$'
			[[ ! "$2" =~ $numeric ]] && usageError "Invalid episode number!"
			EPISODE=$2
			shift
			;;
		"-k"|"--keep")
			KEEP=1
			;;
		*)
			usageError "Unkown argument!"
			;;
		esac
		shift
	done
}

checkReqs() {
	wget --version 1>/dev/null 2>&1
	[ $? == 1 ] && printf "${RED}wget is not installed...${TEXT}\n" && exit 1

	mpv --version 1>/dev/null 2>&1
	[ $? == 1 ] && printf "${RED}mpv is not installed...${TEXT}\n" && exit 1

}

suppressColors() {
	GREEN=''
	YELLOW=''
	RED=''
	BLUE=''
	PURPLE=''
	TEXT=''
}

# prints usage error message in red and exits
# used when parsing args
usageError() {

	local msg=$1
	printf "${RED}$msg${TEXT} See --help for usage.\n"
	exit 1
}

cleanup() {
	[ $KEEP == 0 ] && [ -n "$LAST_FILENAME_DOWNLOADED" ] && rm $LAST_FILENAME_DOWNLOADED
}

interrupt() {
	printf "\n${YELLOW}Script interrupted...${TEXT}\n"
	cleanup
	exit 1
}

# $1 = episode number
# $2 = output filename path [OPTIONAL]
downloadEpisode() {

	local ep=$1
	local api=${EPISODE_API//$EPISODE_NUMBER_PATTERN/$ep}
	local filename=${2:-${EPISODE_TITLE//$EPISODE_NUMBER_PATTERN/$ep}}

	local link=$(wget -q --output-document - "$DARKNET_DIARIES_HOST$api" | grep -oP -- "https://.+.mp3" -)

	if [ ! -f "$filename" ]; then

		printf "${YELLOW}Downloading ${PURPLE}episode $ep${YELLOW} and saving to ${PURPLE}$filename${YELLOW}...${TEXT}\n"
		wget -q --output-document "$filename" "$link"

		[ $? == 1 ] && printf "${RED}Download of episode $ep failed unexpectedly!${TEXT}\n" && return 1

		printf "${GREEN}Successfully downloaded ${PURPLE}episode $ep${GREEN} to ${PURPLE}$filename${TEXT}\n"
		LAST_FILENAME_DOWNLOADED=$filename
		return 0

	fi

	printf "${YELLOW}Episode already downloaded...${TEXT}\n"
	return 0
}

# $1 = path to episode
playEpisode() {

	local path=$1

	[ -f "$path" ] && mpv --no-video "$path" && return 0

	printf "${RED}Episode not found at path: ${YELLOW}$path${TEXT}\n"
	return 1

}

# does all the magic
darknetPlayer() {
	
	[ $USAGE == 1 ] && usage
	[ $LICENSE == 1 ] && license
	[ $COLOR == 0 ] && suppressColors

	local filename=${EPISODE_TITLE//$EPISODE_NUMBER_PATTERN/$EPISODE}

	[ ! -f "$filename" ] && downloadEpisode $EPISODE
	playEpisode $filename
}

# =========================================================
# === MAIN ===

trap interrupt SIGINT

checkReqs
getArgs "$@"
darknetPlayer
cleanup
